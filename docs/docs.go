// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/alert": {
            "post": {
                "description": "Добавляет нового уведомление",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Создать уведомление",
                "parameters": [
                    {
                        "description": "Уведомление",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Alert"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Создано",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/alert/{id}": {
            "get": {
                "description": "Возвращает уведомление по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Получить уведомление по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID уведомления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Alert"
                        }
                    },
                    "404": {
                        "description": "Уведомление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет уведомления по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Обновить уведомление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID уведомления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Уведомление",
                        "name": "alert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Alert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Уведомление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет уведомление по ID",
                "tags": [
                    "alerts"
                ],
                "summary": "Удалить уведомление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID уведомления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удалено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Уведомление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/alerts": {
            "get": {
                "description": "Возвращает список всех уведомлений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "alerts"
                ],
                "summary": "Получить все уведомления",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Alert"
                            }
                        }
                    }
                }
            }
        },
        "/api/log": {
            "post": {
                "description": "Добавляет новый лог",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Создать лог",
                "parameters": [
                    {
                        "description": "Лог",
                        "name": "log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Log"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Создано",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/log/{id}": {
            "get": {
                "description": "Возвращает логи по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Получить логи по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID логов",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Log"
                        }
                    },
                    "404": {
                        "description": "Лог не найден",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет логи по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Обновить логи",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID лога",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Лог",
                        "name": "log",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Log"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Лог не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет лог по ID",
                "tags": [
                    "logs"
                ],
                "summary": "Удалить лог",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID лога",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удалено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Лог не найдено",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/logs": {
            "get": {
                "description": "Возвращает список всех логов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "logs"
                ],
                "summary": "Получить все логи",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Log"
                            }
                        }
                    }
                }
            }
        },
        "/api/user": {
            "post": {
                "description": "Добавляет нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Создать пользователя",
                "parameters": [
                    {
                        "description": "Пользователь",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Создано",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "description": "Возвращает пользователя по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные пользователя по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Обновить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Пользователь",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет пользователя по ID",
                "tags": [
                    "users"
                ],
                "summary": "Удалить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Удалено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Возвращает список всех пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Получить всех пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.User"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Alert": {
            "type": "object",
            "properties": {
                "massage": {
                    "type": "string"
                }
            }
        },
        "model.Log": {
            "type": "object",
            "properties": {
                "area": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
