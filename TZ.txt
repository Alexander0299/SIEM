Техническое задание: Система управления информационной безопасностью (SIEM-система) Описание Система для сбора, анализа и хранения журналов безопасности, выявления угроз и создания отчетов.
Функционал Прием логов (файлы, API, БД) Анализ угроз (Brute Force, DDoS, IP-блокировка) Хранение (JSON, CSV, PostgreSQL) REST API (прием, запрос логов и отчетов) Визуализация (веб-интерфейс, графики, отчеты) Микросервисная архитектура (gRPC, брокер сообщений) Архитектура Компоненты:
Collector — сбор логов (файлы, API, syslog) Analyzer — проверка логов, выявление угроз Storage — база данных для хранения логов API Gateway — REST API для работы с логами Web UI — визуализация данных Система оповещений — уведомления о критических событиях Связь:
Сборщик → Анализатор → Хранилище API-шлюз запрашивает данные из хранилища Веб-интерфейс получает данные через API Система оповещений отправляет уведомления Алгоритм работы Лог поступает в Сборщик Анализатор обрабатывает его, проверяет на наличие угроз Если угроза найдена → Система оповещений отправляет уведомление Лог сохраняется в Хранилище Данные доступны через API-шлюз Веб-интерфейс визуализирует логи и отчёты Технологии Язык: Golang БД: PostgreSQL Форматы: JSON, Protobuf Мониторинг: Prometheus, Grafana Этапы разработки MVP: сбор и анализ логов API, БД, расширенный анализ Веб-интерфейс, микросервисы

